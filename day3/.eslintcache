[{"/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/index.js":"1","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/reportWebVitals.js":"2","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/App.js":"3","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/pages/todo.jsx":"4","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/components/appbar.jsx":"5","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/components/todolist.jsx":"6","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/components/content.jsx":"7","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/components/body.jsx":"8","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/pages/todos.js":"9"},{"size":500,"mtime":1607493342763,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607493342763,"results":"12","hashOfConfig":"11"},{"size":207,"mtime":1607495554800,"results":"13","hashOfConfig":"11"},{"size":2471,"mtime":1607494886147,"results":"14","hashOfConfig":"11"},{"size":1799,"mtime":1607493888603,"results":"15","hashOfConfig":"11"},{"size":2052,"mtime":1607494787691,"results":"16","hashOfConfig":"11"},{"size":3356,"mtime":1607493342762,"results":"17","hashOfConfig":"11"},{"size":1843,"mtime":1607494747831,"results":"18","hashOfConfig":"11"},{"size":3132,"mtime":1607496543428,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"dnn96k",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/index.js",[],["44","45"],"/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/reportWebVitals.js",[],"/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/App.js",["46"],"import React from 'react';\nimport Todo from './pages/todo';\nimport Todos from './pages/todos';\n\nfunction App() {\n  return (\n      <Todos style={{width: \"100%\", height: \"100%\"}}/>\n  );\n}\n\nexport default App;\n","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/pages/todo.jsx",[],"/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/components/appbar.jsx",[],["47","48"],"/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/components/todolist.jsx",["49","50"],"import React, { Fragment, useState } from \"react\";\n\nimport {\n  Box,\n  Container,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  IconButton,\n  Typography,\n  Divider,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: \"#004987\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n  listItem: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"#004987\",\n    marginTop: 20,\n  },\n  divider: {\n    backgroundColor: \"#004987\",\n  },\n  input: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginTop: 20,\n  },\n}));\n\nconst NewList = (props) => {\n  const text = props.text;\n\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.listItem}>\n      <FormControlLabel control={<Checkbox color=\"primary\" />} />\n      <Typography className={classes.listText}>{text}</Typography>\n    </Box>\n  );\n};\n\nexport default function TodoList(props) {\n  const [list, setList] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.root}>\n      <h2>What are you doing today?</h2>\n      {props.listOfTodos.map((item) => (\n        <Fragment>\n          <NewList key={Math.random() * 1000} text={item} />\n          <Divider className={classes.divider} />\n        </Fragment>\n      ))}\n      <Box className={classes.input}>\n        <div>\n          <FormControlLabel control={<Checkbox />} />\n          <TextField\n            variant=\"outlined\"\n            label={\"Add a new list!\"}\n            onChange={(e) => setText(e.target.value)}\n          />\n        </div>\n        <IconButton\n          onClick={() => {\n            if (text.length > 0) {\n              props.addNewList(text);\n              //setText(\"\");\n            } else {\n              alert(\"What are you going to do today?\");\n            }\n          }}\n        >\n          <AddIcon />\n        </IconButton>\n      </Box>\n      <Divider className={classes.divider} />\n    </Container>\n  );\n}\n","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/components/content.jsx",[],"/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/components/body.jsx",["51","52","53","54"],"import React, { Fragment } from \"react\";\n\nimport { AppBar, Container, Toolbar, Box, makeStyles } from \"@material-ui/core\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"#004987\",\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(10),\n      paddingRight: theme.spacing(10),\n    },\n  },\n  profileBox: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    padding: \"auto\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"300px\",\n      minWidth: \"200px\",\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"100px\",\n    },\n  },\n  main: {\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  todo: {\n    margin: 20,\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"40%\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: \"100px\",\n    },\n  },\n  content: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"60%\",\n      padding: \"auto\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: \"200px\",\n      padding: \"auto\",\n    },\n  },\n}));\n\nexport const BodyContent = (props) => {\n  const classes = useStyles();\n\n  const elements = {\n    todo: Array(props.todoList),\n    content: Array(props.content),\n  };\n\n  return (\n      <div className={classes.main}>\n        <Container className={classes.todo}>\n          {elements[\"todo\"].map((components) => (\n            <Fragment key={Math.random() * 100}>{components}</Fragment>\n          ))}\n        </Container>\n        <Container className={classes.content}>\n          {elements[\"content\"].map((components) => (\n            <Fragment key={Math.random() * 100}>{components}</Fragment>\n          ))}\n        </Container>\n      </div>\n  );\n};\n","/Users/apel/Files/Tech/WinterCampGG/Day-3/day3/src/pages/todos.js",["55"],"import React, { useState } from \"react\";\nimport {\n  Container,\n  Card,\n  Typography,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { TopAppBar } from \"../components/appbar\";\nimport { BodyContent } from \"../components/body\";\n\nimport Content from \"../components/content\";\nimport TodoList from \"../components/todolist\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up(\"md\")]: {\n      height: \"100vh\",\n    },\n  },\n  themeSelectColor: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignContent: \"center\",\n    color: \"#004987\",\n  },\n  SelectColorButton: {\n    color: \"#004987\",\n  },\n}));\n\nexport default class Todo extends React.Component {\n    state = {\n        backgroundColor: \"#fbf8cd\",\n        list: [],\n    }\n  \n    setBackgroundColor = (color) => {\n        this.setState({backgroundColor: color})\n    }\n  render(){\n\n    \n    return (\n        <div style={{height:\"100%\"}}>\n        <TopAppBar className={useStyles.appBar} position=\"relative\"/>\n        <div className={useStyles.root} style={{ backgroundColor: this.state.backgroundColor, padding:  20}}>\n            <BodyContent \n            content={<Content />} \n            todoList={\n                <TodoList \n                listOfTodos={this.state.list}\n                addNewList={(newText) => {\n                    this.state.list.push(newText)\n                    this.setState({list: this.state.list});\n                }}\n                />\n            } \n        \n            \n            />\n            <Container>\n            <Card style={useStyles.themeSelectColor}>\n                    {/* <div style={{flex: 5, justifyContent: \"space-between\"}}> */}\n                        <Typography style={{ margin: \"auto\", marginLeft: 10 }}>\n                        Change the background color:\n                        </Typography>\n                    {/* </div> */}\n                    {/* <div style={{flex: 2, justifyContent: \"space-between\"}}> */}\n                    <div>\n                    <Button\n                        className={useStyles.SelectColorButton}\n                        onClick={() => this.setBackgroundColor(\"#f2dede\")}\n                        disabled={this.state.backgroundColor === \"#f2dede\" ? true : false}\n                    >\n                        pink\n                    </Button>\n                    <Button\n                        className={useStyles.SelectColorButton}\n                        onClick={() => this.setBackgroundColor(\"#004987\")}\n                        disabled={this.state.backgroundColor === \"#004987\" ? true : false}\n                    >\n                        blue\n                    </Button>\n                    <Button\n                        className={useStyles.SelectColorButton}\n                        onClick={() => this.setBackgroundColor(\"#fbf8cd\")}\n                        disabled={this.state.backgroundColor === \"#fbf8cd\" ? true : false}\n                    >\n                        yellow\n                    </Button>\n                    </div>\n            </Card>\n            </Container>\n        </div>\n        </div>\n    );\n    }\n}\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":12},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","replacedBy":"65"},{"ruleId":"60","severity":1,"message":"66","line":53,"column":10,"nodeType":"62","messageId":"63","endLine":53,"endColumn":14},{"ruleId":"60","severity":1,"message":"67","line":53,"column":16,"nodeType":"62","messageId":"63","endLine":53,"endColumn":23},{"ruleId":"60","severity":1,"message":"68","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":16},{"ruleId":"60","severity":1,"message":"69","line":3,"column":29,"nodeType":"62","messageId":"63","endLine":3,"endColumn":36},{"ruleId":"60","severity":1,"message":"70","line":3,"column":38,"nodeType":"62","messageId":"63","endLine":3,"endColumn":41},{"ruleId":"60","severity":1,"message":"71","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":18},{"ruleId":"60","severity":1,"message":"72","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Todo' is defined but never used.","Identifier","unusedVar",["73"],["74"],"'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Box' is defined but never used.","'PersonIcon' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]